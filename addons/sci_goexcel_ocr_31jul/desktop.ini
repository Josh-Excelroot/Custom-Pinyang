    def get_line_list(self, partner_template, text_file_dic, currency, exchange_rate_header, direction, container_size):
        text_file = open(text_file_dic, 'r', encoding="utf8")
        line_list = []
        currency_keywords = self.env['ocr.table.mapping'].search([('name', '=', 'CURRENCY')])
        product_keywords = self.env['ocr.table.mapping'].search([('name', '=', 'PRODUCT')], limit=1)
        product_exclusion_keywords = self.env['ocr.table.mapping'].search([('name', '=', 'PRODUCT EXCLUSION')], limit=1)
        line_item_start = False
        line_item_pattern = partner_template.line_item_pattern
        x2nd_line_item_pattern = partner_template.x2nd_line_item_pattern
        for line in text_file:
            if len(line) > 3:
                #print(line)
                if partner_template.name == 'MEDITERRANEAN SHIPPING COMPANY (M) SDN BHD':
                    line = line.replace(r'I\/I', 'M').replace('U51)', 'USD')
                line_item_pattern = partner_template.line_item_pattern
                if partner_template.name == "CMA CGM Asia Shipping Pte. Ltd":
                    if 'OCEAN FREIGHT' in line:
                        line_item_pattern = 'QTY UPI TOTAL'

                if partner_template.product_section_end and partner_template.product_section_end in line:
                    line_item_start = False
                x = 0
                if line_item_start:
                    product_excluded = False
                    product = False
                    product_name = False
                    product_desc = False
                    currency_line_id = False
                    price_list = False
                    price = 0
                    foreign_price = 0
                    currency_rate = 1.000000
                    quantity = 1
                    total = 0

                    line_item_pattern_count = 1
                    x2nd_line_item_pattern_count = 1
                    if partner_template.complex_line:
                        complex_line_pattern = partner_template.complex_line_pattern
                        line_item_pattern_count = len(complex_line_pattern.split())
                        complex_line_pattern_space = complex_line_pattern
                        complex_line_pattern_space = complex_line_pattern_space.replace("NIL", "")
                        complex_line_pattern_space = complex_line_pattern_space.replace("QTY", "")
                        complex_line_pattern_space = complex_line_pattern_space.replace("RTE", "")
                        complex_line_pattern_space = complex_line_pattern_space.replace("PFC", "")
                        complex_line_pattern_space = complex_line_pattern_space.replace("UPI", "")
                        complex_line_pattern_space = complex_line_pattern_space.replace("TOTAL", "")
                        counter = 0
                        list_pattern = []
                        for char in complex_line_pattern_space:
                            start = counter
                            end = complex_line_pattern.index(char)
                            list_pattern.append(complex_line_pattern[start:end])
                            counter = complex_line_pattern.index(char) + 1
                        list_pattern.append(complex_line_pattern[counter:len(complex_line_pattern)])
                        list_price = []
                        temp_names = line.split()
                        check_price = False
                        check_complex_item = False
                        product_desc = False
                        line_item_with_exchange_rate = False

                        # Get Currency in Line
                        currency_id_lines = self.env['ocr.table.mapping.line'].search(
                            [('type', '=', 'value'),
                             ('line_id', '=', currency_keywords.id)])
                        for currency_id_line in currency_id_lines:
                            if currency_id_line.keyword in line and not currency_line_id:
                                currency_line_id = currency_id_line.currency.id

                        if currency and currency_line_id:
                            if currency_line_id != currency:
                                line_item_pattern_count = len(
                                    partner_template.line_item_pattern_with_exchange_rate.split()) - 1
                                line_item_with_exchange_rate = True
                                line_item_pattern = partner_template.line_item_pattern_with_exchange_rate
                        line_item_pattern_counter = 1
                        for temp_name in temp_names:
                            if line_item_pattern_counter <= line_item_pattern_count:
                                if any(char.isdigit() for char in temp_name):
                                    check_price = True
                                    raw_line = temp_name.upper()
                                    counter = 0
                                    if not check_complex_item:
                                        for char in complex_line_pattern_space:
                                            start = counter
                                            try:
                                                end = raw_line.index(char)
                                                counter = raw_line.index(char) + 1

                                            except:
                                                end = len(raw_line)
                                            list_price.append(raw_line[start:end])
                                            check_complex_item = True
                                    list_price.append(raw_line[counter:len(raw_line)])
                                    line_item_pattern_counter = line_item_pattern_counter + 1
                            else:
                                break

                            if not check_price:
                                # Get Product Name
                                if not product_name:
                                    if len(temp_name) > 1:
                                        product_name = temp_name
                                else:
                                    if len(temp_name) > 1:
                                        product_name = product_name + " " + temp_name
                                # Get Raw Product Description
                                if not product_desc:
                                    product_desc = temp_name
                                else:
                                    product_desc = product_desc + " " + temp_name
                                if not product:
                                    product_ids = self.env['ocr.table.mapping.line'].search(
                                        [('keyword', 'ilike', product_name),
                                         ('type', '=', 'value'),
                                         ('line_id', '=', product_keywords.id),
                                         ('direction', '=', direction),
                                         ('container_size', '=', container_size),
                                         ('company_id', '=', self.env.company_id.id)
                                         ])
                                    if len(product_ids) == 1:
                                        product = product_ids[0]
                                    elif len(product_ids) > 1:
                                        product_ids = self.env['ocr.table.mapping.line'].search(
                                            [('keyword', '=', product_name),
                                             ('type', '=', 'value'),
                                             ('line_id', '=', product_keywords.id),
                                             ('direction', '=', direction),
                                             ('container_size', '=', container_size),
                                             ('company_id', '=', self.env.company_id.id)
                                             ])
                                        if len(product_ids) == 1:
                                            product = product_ids[0]
                                    else:
                                        product_name = False
                        counter = 0
                        if line_item_with_exchange_rate:
                            list_pattern = partner_template.line_item_pattern_with_exchange_rate.split()
                        for item in list_pattern:
                            try:
                                price_list = re.findall('\d+\.\d{2,6}|\d+', list_price[counter])
                            except:
                                price_list = []
                            if len(price_list) > 0:
                                x = 1
                                if "QTY" in item:
                                    qty_index = item.index('QTY')
                                    if qty_index > 0:
                                        qty_index = int(qty_index / 4)
                                        quantity = float(price_list[qty_index])
                                    else:
                                        quantity = float(price_list[0])
                                if "PFC" in item:
                                    foreign_price_index = item.index('PFC')
                                    if foreign_price_index > 0:
                                        foreign_price_index = int(foreign_price_index / 4)
                                        foreign_price = float(price_list[foreign_price_index])
                                    else:
                                        foreign_price = float(price_list[0])

                                if "RTE" in item:
                                    currency_rate_index = item.index('RTE')
                                    if currency_rate_index > 0:
                                        currency_rate_index = int(currency_rate_index / 4)
                                        currency_rate = float(price_list[currency_rate_index])
                                    else:
                                        currency_rate = float(price_list[0])
                                if "UPI" in item:
                                    price_index = item.index('UPI')
                                    if price_index > 0:
                                        price_index = int(price_index / 4)
                                        price = float(price_list[price_index])
                                    else:
                                        price = float(price_list[0])
                            counter = counter + 1

                        if price == 0 and foreign_price > 0:
                            price = round(foreign_price * currency_rate, 6)
                            # TODO
                        if currency and currency_line_id:
                            if currency_line_id != currency:
                                if "RTE" not in line_item_pattern:
                                    currency_rate = exchange_rate_header
                                    if foreign_price == 0 and price > 0:
                                        foreign_price = price
                                        price = round(foreign_price * exchange_rate_header, 6)
                                else:
                                    if currency_rate == 1 and total > 0 and quantity > 0:
                                        if foreign_price > 0:
                                            currency_rate = total / foreign_price
                                        if price > 0:
                                            currency_rate = total / price
                                        currency_rate = currency_rate / quantity

                                    if foreign_price == 0 and price > 0:
                                        foreign_price = price
                                        price = round(foreign_price * currency_rate, 6)

                    else:
                        line_with_price = line.replace(',', '')
                        line_with_price = line_with_price.lstrip('0123456789.- ')
                        price_list_raw = re.findall('\d+\.\d{2,6}|\d+', line_with_price)
                        price_list = price_list_raw[-len(line_item_pattern.split()):]
                        if len(price_list) == 5 and partner_template.name == 'MEDITERRANEAN SHIPPING COMPANY (M) SDN BHD':
                            line_item_pattern = line_item_pattern.replace('NIL ','')
                        x = floor(len(line_item_pattern) / 4)
                        if x2nd_line_item_pattern:
                            y = floor(len(x2nd_line_item_pattern) / 4)
                            if len(price_list) == y:
                                line_item_pattern = x2nd_line_item_pattern
                                x = y
                        if 0 < len(price_list) == x:
                            # Get Product Info
                            product_desc = False
                            if "TOTAL" in line_item_pattern:
                                # Get Currency in Line
                                if partner_template.name in ['MEDITERRANEAN SHIPPING COMPANY (IDR)', 'MEDITERRANEAN SHIPPING COMPANY (USD)']:
                                    currency_line_id = currency.id
                                else:
                                    currency_id_lines = self.env['ocr.table.mapping.line'].search(
                                        [('type', '=', 'value'),
                                         ('line_id', '=', currency_keywords.id)])
                                    for currency_id_line in currency_id_lines:
                                        if currency_id_line.keyword in line and not currency_line_id:
                                            currency_line_id = currency_id_line.currency.id
                                if partner_template.with_exchange_rate:
                                    if currency and currency_line_id:
                                        if currency != currency_line_id:
                                            line_item_pattern = partner_template.line_item_pattern_with_exchange_rate
                                            price_list = price_list_raw[-len(line_item_pattern.split()):]
                                line_remove_comma = line.replace(',', '')
                                if not partner_template.name == "WESTPORTS MALAYSIA SDN BHD":
                                    line_remove_comma = line_remove_comma.replace('-', ' ')
                                temp_names = line_remove_comma.split()
                                for temp_name in temp_names:
                                    if not temp_name.isdecimal() and (
                                            len(temp_name) > 2 or (partner_template.name == 'MEDITERRANEAN SHIPPING COMPANY (M) SDN BHD' and temp_name == 'BL')
                                    ):
                                        if '.' not in temp_name:
                                            # Get Product Name
                                            if not product_name:
                                                if len(temp_name) > 1:
                                                    product_name = temp_name
                                            else:
                                                if len(temp_name) > 1:
                                                    product_name = product_name + " " + temp_name
                                            # Get Raw Product Description
                                            if not product_desc:
                                                product_desc = temp_name
                                            else:
                                                product_desc = product_desc + " " + temp_name
                                            product_exclusion_ids = self.env['ocr.table.mapping.line'].search(
                                                [('keyword', 'ilike', product_name),
                                                 ('line_id', '=', product_exclusion_keywords.id),
                                                 ])
                                            if len(product_exclusion_ids) > 0:
                                                product_excluded = True
                                            if not product:
                                                product_ids = self.env['ocr.table.mapping.line'].search(
                                                    [('keyword', 'ilike', product_name),
                                                     ('type', '=', 'value'),
                                                     ('line_id', '=', product_keywords.id),
                                                     ('direction', '=', direction),
                                                     ('container_size', '=', container_size),
                                                     ('company_id', '=', self.env.company_id.id)
                                                     ])
                                                #print(product_ids)
                                                if len(product_ids) == 1:
                                                    product = product_ids[0]
                                                elif len(product_ids) > 1:
                                                    product_ids = self.env['ocr.table.mapping.line'].search(
                                                        [('keyword', '=', product_name),
                                                         ('type', '=', 'value'),
                                                         ('line_id', '=', product_keywords.id),
                                                         ('direction', '=', direction),
                                                         ('container_size', '=', container_size),
                                                         ('company_id', '=', self.env.company_id.id)
                                                         ])
                                                    if len(product_ids) == 1:
                                                        product = product_ids[0]
                                                else:
                                                    product_name = False
                                if len(price_list) > 1:
                                    if "QTY" in line_item_pattern:
                                        qty_index = line_item_pattern.index('QTY')
                                        if qty_index > 0:
                                            qty_index = int(qty_index / 4)
                                            quantity = float(price_list[qty_index])
                                        else:
                                            quantity = float(price_list[0])
                                    if "PFC" in line_item_pattern:
                                        foreign_price_index = line_item_pattern.index('PFC')
                                        if foreign_price_index > 0:
                                            foreign_price_index = int(foreign_price_index / 4)
                                            foreign_price = float(price_list[foreign_price_index])
                                        else:
                                            foreign_price = float(price_list[0])

                                    if "RTE" in line_item_pattern:
                                        currency_rate_index = line_item_pattern.index('RTE')
                                        if currency_rate_index > 0:
                                            currency_rate_index = int(currency_rate_index / 4)
                                            currency_rate = float(price_list[currency_rate_index])
                                        else:
                                            currency_rate = float(price_list[0])
                                    if "UPI" in line_item_pattern:
                                        price_index = line_item_pattern.index('UPI')
                                        if price_index > 0:
                                            price_index = int(price_index / 4)
                                            price = float(price_list[price_index])
                                        else:
                                            price = float(price_list[0])
                                    if partner_template.name == "CMA CGM Asia Shipping Pte. Ltd":
                                        if 'OCEAN FREIGHT' in line:
                                            price = price/ quantity
                                    if "TOTAL" in line_item_pattern:
                                        total_index = line_item_pattern.index('TOTAL')
                                        if total_index > 0:
                                            total_index = int(total_index / 4)
                                            total = float(price_list[total_index])
                                        else:
                                            total = float(price_list[0])
                                if price == 0 and foreign_price > 0:
                                    price = round(foreign_price * currency_rate, 6)
                                    # TODO
                                if currency and currency_line_id:
                                    if currency_line_id != currency:
                                        if "RTE" not in line_item_pattern:
                                            currency_rate = exchange_rate_header
                                            if foreign_price == 0 and price > 0:
                                                foreign_price = price
                                                price = round(float(foreign_price) * float(exchange_rate_header), 6)
                                        else:
                                            if currency_rate == 1 and total > 0 and quantity > 0:
                                                if foreign_price > 0:
                                                    currency_rate = total / foreign_price
                                                if price > 0:
                                                    currency_rate = total / price
                                                currency_rate = currency_rate / quantity

                                            if foreign_price == 0 and price > 0:
                                                foreign_price = price
                                                price = round(foreign_price * currency_rate, 6)

                                company_currency = self.env.ref('base.main_company').currency_id.id
                    if x == len(price_list) and not product_excluded:
                        if quantity < 1000:
                            if product:
                                if partner_template.name in ['MEDITERRANEAN SHIPPING COMPANY (IDR)', 'MEDITERRANEAN SHIPPING COMPANY (USD)']:
                                    line_amount_total = total
                                    price = total / quantity
                                    currency_rate = 1
                                else:
                                    line_amount_total = float_round(price * quantity, 2, rounding_method='HALF-UP') or 0.0
                                dic = {
                                    'product_id': product.product_id.id or False,
                                    'name': product.product_id.name or False,
                                    'temp_name': product_desc or '',
                                    'quantity': quantity,
                                    'price_unit': price,
                                    'line_amount': line_amount_total,
                                    'foreign_price': foreign_price,
                                    'currency_rate': currency_rate,
                                    'currency': currency_line_id,
                                    'invoice_line_tax_ids': False,
                                }
                                line_list.append(dic)
                            else:
                                dic = {
                                    'product_id': False,
                                    'name': product_desc or '',
                                    'temp_name': product_desc or '',
                                    'quantity': quantity,
                                    'price_unit': price,
                                    'line_amount': float_round(price * quantity, 2, rounding_method='HALF-UP') or 0.0,
                                    'foreign_price': foreign_price,
                                    'currency_rate': currency_rate,
                                    'currency': currency_line_id,
                                    'invoice_line_tax_ids': False,
                                }
                                line_list.append(dic)

                if partner_template.product_section_start and partner_template.product_section_start in line:
                    line_item_start = True

        return line_list